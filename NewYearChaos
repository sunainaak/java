import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class NewYearChaos {

    // Complete the minimumBribes function below.
    static void minimumBribes(int[] q) {

        int n = q.length;
        int minSwaps = 2;
        int totalSwaps = 0;
        boolean flag = false;
       
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();

        for(int i = 0; i< n; i++){
            int count =0;
            for(int j = i+1; j<n; j++){  
                if(q[i] > q[j]){
                   count += 1;
                }

            }
            if(count>0){
                map.put(q[i],count);
            }
            
        }

        for(Map.Entry<Integer,Integer> entry : map.entrySet()){
            if(entry.getValue() <= minSwaps){
                totalSwaps += entry.getValue();
            }else{
                flag = true;
            }

        }

        if(flag){
            System.out.println("Too chaotic");
        }else{
            System.out.println(totalSwaps);
        }
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] q = new int[n];

            String[] qItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int qItem = Integer.parseInt(qItems[i]);
                q[i] = qItem;
            }

            minimumBribes(q);
        }

        scanner.close();
    }
}
